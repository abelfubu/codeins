{"version":3,"sources":["components/Blog/BlogCode.js","components/Blog/Blog.js","components/Blog/Content/Axios/AxiosCode.js","components/Blog/Content/Axios/Axios.js","components/Blog/Content/Router/RouterCode.js","components/Blog/Content/Router/Router.js","components/Blog/Content/Redux/ReduxCode.js","components/Blog/Content/Redux/Redux.js","components/SideBar/SideBar.js","App.js","store/reducer.js","index.js"],"names":["Content","inner","prevent","input","form","Blog","className","Container","maxWidth","Box","my","text","BlogCode","language","theme","nord","codeBlock","code1","code2","code3","code4","code5","delete","AxiosCode","browserrouter","route","component","withrouter","default","link","switch","params","redirect","error","lazy","push","data","test","Router","RouterCode","store","reducer","reactredux","provider","actions","actionsimport","ReduxCode","useStyles","makeStyles","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","hide","menuButton","marginRight","spacing","drawerPaper","drawer","flexShrink","content","flexGrow","padding","contentShift","drawerHeader","alignItems","mixins","toolbar","justifyContent","connect","state","ctr","counter","withRouter","props","classes","React","useState","open","setOpen","useTheme","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Typography","variant","noWrap","Fab","size","Drawer","anchor","paper","direction","Divider","List","map","index","ListItem","button","key","ListItemText","to","ListItemIcon","primary","path","exact","Axios","Redux","App","initialState","action","type","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ce5423cf.chunk.js","sourcesContent":["const Content = {\n  inner: `<div dangerouslySetInnerHTML={{ __html: database.data }} />`,\n  prevent: `event.preventDefault();`,\n  input: `import React from 'react';\n  import './Input.css';\n  \n  const Input = (props) => {\n    let inputElement = null;\n  \n    switch (props.elementType) {\n      case 'input':\n        inputElement = <input {...props.elementConfig} value={props.value} />;\n        break;\n      case 'textarea':\n        inputElement = <textarea {...props.elementConfig} value={props.value} />;\n        break;\n      default:\n        inputElement = <input {...props.elementConfig} value={props.value} />;\n    }\n    return (\n      <div className='Input'>\n        <label>{props.label}</label>\n        {inputElement}\n      </div>\n    );\n  };\n  \n  export default Input;\n  `,\n  form: `import React, { useState } from 'react';\n  import Input from '../Input/Input';\n  \n  const Form = (props) => {\n    const [form] = useState([\n      {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Your name',\n        },\n        label: 'Name',\n        value: '',\n      },\n      {\n        elementType: 'input',\n        elementConfig: {\n          type: 'email',\n          placeholder: 'Your email',\n        },\n        label: 'Email',\n        value: '',\n      },\n      {\n        elementType: 'input',\n        elementConfig: {\n          type: 'password',\n          placeholder: 'Your password',\n        },\n        label: 'Password',\n        value: '',\n      },\n    ]);\n    return (\n      <div>\n        <form action=''></form>\n        {form.map((input) => (\n          <Input\n            key={input.label}\n            label={input.label}\n            elementType={input.elementType}\n            elementConfig={input.elementConfig}\n          />\n        ))}\n      </div>\n    );\n  };\n  \n  export default Form;`,\n};\n\nexport default Content;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport './Blog.css';\nimport Container from '@material-ui/core/Container';\nimport { CopyBlock, nord } from 'react-code-blocks';\nimport BlogCode from './BlogCode';\n\nconst Blog = () => {\n  return (\n    <div className='Blog'>\n      <Container maxWidth='lg'>\n        <h3>Renderizando html desde la base de datos</h3>\n        <p>Pequeño truco para pasar data entre rutas</p>\n        <Box my={3}>\n          <CopyBlock\n            text={BlogCode.inner}\n            language='jsx'\n            theme={nord}\n            codeBlock\n          />\n        </Box>\n        <h3>preventDefault()</h3>\n        <p>Evita que al hacer submit en un formulario se recargue la página</p>\n        <Box my={3}>\n          <CopyBlock\n            text={BlogCode.prevent}\n            language='jsx'\n            theme={nord}\n            codeBlock\n          />\n        </Box>\n        <h3>React Form</h3>\n        <p>Ejemplo de formulario dinámico de React</p>\n        <Box my={3}>\n          <CopyBlock\n            text={BlogCode.form}\n            language='jsx'\n            theme={nord}\n            codeBlock\n          />\n        </Box>\n        <h3>React Input</h3>\n        <p>Ejemplo de input dinámico de React</p>\n        <Box my={3}>\n          <CopyBlock\n            text={BlogCode.input}\n            language='jsx'\n            theme={nord}\n            codeBlock\n          />\n        </Box>\n      </Container>\n    </div>\n  );\n};\n\nexport default Blog;\n","const Content = {\n  code1: `import axios from 'axios';\n\n  const instance = axios.create({\n      baseURL: 'https://react-my-burger-e0cf1.firebaseio.com/'\n  });\n  \n  export default instance;`,\n  code2: `npm i axios`,\n  code3: `import axios from '../../axios-orders';`,\n  code4: `componentDidMount() {\n    axios.get('/ingredients.json')\n        .then(response => {\n            this.setState({ ingredients: response.data });\n        })\n        .catch(error => {\n            this.setState({error: true})\n        })\n}`,\n  code5: `postDataHandler = () => {\n    const data = {\n      title: this.state.title,\n      body: this.state.content,\n      author: this.state.author,\n    };\n    axios.post('/posts', data).then((response) => {\n      console.log(response);\n      this.props.history.replace('/posts');\n      //this.setState({submitted: true})\n    });\n  };`,\n  delete: `deletePostHandler = () => {\n    axios.delete('/posts/' + this.props.id)\n        .then(response => {\n            console.log(response);\n        });\n}`,\n};\n\nexport default Content;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport { CopyBlock, nord } from 'react-code-blocks';\nimport AxiosCode from './AxiosCode';\n\nconst Blog = () => {\n  return (\n    <div className='Blog'>\n      <Container maxWidth='lg'>\n        <h1>Axios</h1>\n        <p>Primero hay que instalar axios</p>\n        <Box my={3}>\n          <CopyBlock\n            text={AxiosCode.code2}\n            language='jsx'\n            theme={nord}\n            codeBlock\n          />\n        </Box>\n        <p>\n          Podemos configurar la ruta principal que vamos a utilizar para llegar\n          al servidor, de esa manera no necesitaremos especificarla despues en\n          cada request.\n        </p>\n        <Box my={3}>\n          <CopyBlock\n            text={AxiosCode.code1}\n            language='jsx'\n            theme={nord}\n            codeBlock\n          />\n        </Box>\n        <p>\n          Después importaremos axios desde el archivo que hemos creado y no\n          desde el paquete principal\n        </p>\n        <Box my={3}>\n          <CopyBlock\n            text={AxiosCode.code3}\n            language='jsx'\n            theme={nord}\n            codeBlock\n          />\n        </Box>\n        <p>Un ejemplo de get request para una aplicacion de react</p>\n        <Box my={3}>\n          <CopyBlock\n            text={AxiosCode.code4}\n            language='jsx'\n            theme={nord}\n            codeBlock\n          />\n        </Box>\n        <p>Un ejemplo de post request</p>\n        <Box my={3}>\n          <CopyBlock\n            text={AxiosCode.code5}\n            language='jsx'\n            theme={nord}\n            codeBlock\n          />\n        </Box>\n        <p>Delete request</p>\n        <Box my={3}>\n          <CopyBlock\n            text={AxiosCode.delete}\n            language='jsx'\n            theme={nord}\n            codeBlock\n          />\n        </Box>\n      </Container>\n    </div>\n  );\n};\n\nexport default Blog;\n","const Content = {\n  code1: `npm i react-router-dom`,\n  browserrouter: `import React, { Component } from 'react';\n  import { BrowserRouter } from 'react-router-dom';\n  import Blog from './containers/Blog/Blog';\n  \n  class App extends Component {\n    render() {\n      return (\n        <BrowserRouter>\n          <div className=\"App\">\n            <Blog />\n          </div>\n        </BrowserRouter>\n        \n      );\n    }\n  }\n  \n  export default App;`,\n  route: `import { Route, Link } from 'react-router-dom';\n\n<Route path='/' exact render={() => <h1>Hello</h1>} />`,\n  component: `<Route path='/' exact component={Posts} />\n<Route path='/new-post' component={NewPost} />`,\n  withrouter: `import React from 'react';\nimport {withRouter} from 'react-router-dom'\n  \nimport './Post.css';\n  \nconst post = (props) => (\n    <article className=\"Post\" onClick={props.clicked}>\n        <h1>{props.title}</h1>\n        <div className=\"Info\">\n            <div className=\"Author\">{props.author}</div>\n        </div>\n    </article>\n);\n  \nexport default withRouter(post);`,\n  default: `<BrowserRouter basename=\"/my-app\">\n<div className=\"App\">\n  <Blog />\n</div>\n</BrowserRouter>`,\n  link: `import { NavLink, Link } from 'react-router-dom';\n<Link to={props.match.url + '/new'}>  will lead to example.com/posts/new  \nwhen placing this link in a component loaded on /posts . If you'd use the same <Link>  \nin a component loaded via /all-posts , the link would point to /all-posts/new .\n\n<li><NavLink\n  activeClassName=\"my-active\"\n  activeStyle={{color: 'steelBlue'}}\n  exact\n  to=\"/\">Home</NavLink>\n</li>`,\n  switch: `import { Route, Link, Switch } from 'react-router-dom';\n\n<Switch>\n     <Route path='/' exact component={Posts} />\n     <Route path='/new-post' component={NewPost} />\n     <Route path='/posts/:id' exact component={FullPost} />\n</Switch>`,\n  params: `this.props.match.params.id , refers to the url params where id is /:id in the route`,\n  redirect: `import { Route, Link, Switch, Redirect } from 'react-router-dom';\n\n<Redirect from='/' to='Posts' />`,\n  error: `<Route component={ErrorPage} />`,\n  lazy: `const Lazy = React.lazy(() => import('./containers/Lazy'));\n  \nimport React, { Suspense } from 'react';\n  \n<Route path='/lazy' render={() => (\n  <Suspense fallback={<Spinner/>}>\n    <Lazy/>\n  </Suspense>\n)}`,\n  push: `this.props.history.push('/checkout');\nthis.props.history.goBack();\nthis.props.history.replace('/checkout/more');`,\n  data: `<Route\n  path={this.PaymentResponse.match.path + '/contact-data'}\n  render={(props) => (<Component data={this.state.data} {...props} />)}\n/>`,\n  test: `<h3>Pasando datos a través de route</h3>\n  <p>Pequeño truco para pasar data entre rutas</p>\n  <Box my={3}>\n    <CopyBlock\n      text={RouterCode.data}\n      language='jsx'\n      theme={nord}\n      codeBlock\n    />\n  </Box>`,\n};\n\nexport default Content;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport { CopyBlock, nord } from 'react-code-blocks';\nimport RouterCode from './RouterCode';\n\nconst Router = () => {\n  return (\n    <div className='Blog'>\n      <Container maxWidth='lg'>\n        <h1>React Router</h1>\n        <p>Primero hay que instalar el paquete</p>\n        <Box my={3}>\n          <CopyBlock\n            text={RouterCode.code1}\n            language='jsx'\n            theme={nord}\n            codeBlock\n          />\n        </Box>\n        <p>\n          Es imprescindible rodear los componentes donde queremos usar router\n          con BrowserRouter\n        </p>\n        <Box my={3}>\n          <CopyBlock\n            text={RouterCode.browserrouter}\n            language='jsx'\n            theme={nord}\n            codeBlock\n          />\n        </Box>\n        <p>Si la ruta por defecto no es '/' entonces podemos configurarlo</p>\n        <Box my={3}>\n          <CopyBlock\n            text={RouterCode.default}\n            language='jsx'\n            theme={nord}\n            codeBlock\n          />\n        </Box>\n        <p>Para definir una ruta primero hay que importar route</p>\n        <Box my={3}>\n          <CopyBlock\n            text={RouterCode.route}\n            language='jsx'\n            theme={nord}\n            codeBlock\n          />\n        </Box>\n        <p>\n          También se puede crear una ruta que hace un render de un componente,\n          el componente debe estar importado primero\n        </p>\n        <Box my={3}>\n          <CopyBlock\n            text={RouterCode.component}\n            language='jsx'\n            theme={nord}\n            codeBlock\n          />\n        </Box>\n        <h3>WithRouter</h3>\n        <p>Pasa los history props entre archivos</p>\n        <Box my={3}>\n          <CopyBlock\n            text={RouterCode.withrouter}\n            language='jsx'\n            theme={nord}\n            codeBlock\n          />\n        </Box>\n        <h3>Link y NavLink</h3>\n        <p>\n          Lo utilizaremos en lugar de 'a' tags para que la pagina no se\n          recargue, NavLink utiliza la clase .active en elementos activos\n        </p>\n        <Box my={3}>\n          <CopyBlock\n            text={RouterCode.link}\n            language='jsx'\n            theme={nord}\n            codeBlock\n          />\n        </Box>\n        <h3>Switch</h3>\n        <p>\n          Se encarga de que solo los elementos por orden son renderizados, de\n          esa manera evitamos que '/hola/hola' se cargue debajo de '/hola'\n        </p>\n        <Box my={3}>\n          <CopyBlock\n            text={RouterCode.switch}\n            language='jsx'\n            theme={nord}\n            codeBlock\n          />\n        </Box>\n        <h3>Params</h3>\n        <p>Se refieren a los parametros de ruta dinamicos</p>\n        <Box my={3}>\n          <CopyBlock\n            text={RouterCode.params}\n            language='jsx'\n            theme={nord}\n            codeBlock\n          />\n        </Box>\n        <h3>Redirect</h3>\n        <p>Redireccionar rutas</p>\n        <Box my={3}>\n          <CopyBlock\n            text={RouterCode.redirect}\n            language='jsx'\n            theme={nord}\n            codeBlock\n          />\n        </Box>\n        <h3>404</h3>\n        <p>Rutas no disponibles, podemos crear una página 404</p>\n        <Box my={3}>\n          <CopyBlock\n            text={RouterCode.error}\n            language='jsx'\n            theme={nord}\n            codeBlock\n          />\n        </Box>\n        <h3>Suspense</h3>\n        <p>\n          Para evitar cargar por defecto rutas que posiblemente no se usarán\n          podemos usar Suspense\n        </p>\n        <Box my={3}>\n          <CopyBlock\n            text={RouterCode.lazy}\n            language='jsx'\n            theme={nord}\n            codeBlock\n          />\n        </Box>\n        <h3>props.history</h3>\n        <p>Metodos que proporciona router para poder gestionar las rutas</p>\n        <Box my={3}>\n          <CopyBlock\n            text={RouterCode.push}\n            language='jsx'\n            theme={nord}\n            codeBlock\n          />\n        </Box>\n        <h3>Pasando datos a través de route</h3>\n        <p>Pequeño truco para pasar data entre rutas</p>\n        <Box my={3}>\n          <CopyBlock\n            text={RouterCode.data}\n            language='jsx'\n            theme={nord}\n            codeBlock\n          />\n        </Box>\n      </Container>\n    </div>\n  );\n};\n\nexport default Router;\n","const Content = {\n  code1: `npm i redux`,\n  store: `import React from 'react';\n  import ReactDOM from 'react-dom';\n  import { createStore } from 'redux';\n  import { Provider } from 'react-redux';\n  \n  import './index.css';\n  import App from './App';\n  \n  import reducer from './store/reducer';\n  \n  const store = createStore(reducer);\n  \n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root'),\n  );`,\n  reducer: `const initialState = {\n    counter: 0,\n  };\n  \n  const reducer = (state = initialState, action) => {\n    switch (action.type) {\n      case actionTypes.INCREMENT:\n        return {\n          ...state,\n          counter: state.counter + 1,\n        };\n      case actionTypes.DECREMENT:\n        return {\n          ...state,\n          counter: state.counter - 1,\n        };\n      case actionTypes.ADD:\n        return {\n          ...state,\n          counter: state.counter + 5,\n        };\n      case actionTypes.SUB:\n        return {\n          ...state,\n          counter: state.counter - 5,\n        };\n      default:\n        break;\n    }\n    return state;\n  };\n  \n  export default reducer;`,\n  reactredux: `npm i react-redux`,\n  provider: `import { Provider } from 'react-redux';\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root'),\n  );`,\n  component: `import React, { Component } from 'react';\n  import { connect } from 'react-redux';\n  \n  import CounterControl from '../../components/CounterControl/CounterControl';\n  import CounterOutput from '../../components/CounterOutput/CounterOutput';\n  \n  class Counter extends Component {\n    render() {\n      return (\n        <div>\n          <CounterOutput value={this.props.ctr} />\n          <CounterControl\n            label='Increment'\n            clicked={this.props.onIncrementCounter}\n          />\n          <CounterControl\n            label='Decrement'\n            clicked={this.props.onDecrementCounter}\n          />\n          <CounterControl label='Add 5' clicked={this.props.onAddCounter} />\n          <CounterControl label='Subtract 5' clicked={this.props.onSubCounter} />\n        </div>\n      );\n    }\n  }\n  \n  const mapStateToProps = (state) => {\n    return {\n      ctr: state.counter,\n    };\n  };\n  \n  const mapDispatchToProps = (dispatch) => {\n    return {\n      onIncrementCounter: () => dispatch({ type: actionTypes.INCREMENT }),\n      onDecrementCounter: () => dispatch({ type: actionTypes.DECREMENT }),\n      onAddCounter: () => dispatch({ type: actionTypes.ADD }),\n      onSubCounter: () => dispatch({ type: actionTypes.SUB }),\n      handleStore: (result) =>\n        dispatch({ type: actionTypes.STORE, result: result }),\n      deleteStore: (id) => dispatch({ type: actionTypes.DELETE, resultElId: id }),\n    };\n  };\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(Counter);`,\n  actions: `export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';`,\n  actionsimport: `import * as actionTypes from './store/actions';`,\n};\n\nexport default Content;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport { CopyBlock, nord } from 'react-code-blocks';\nimport ReduxCode from './ReduxCode';\n\nconst Blog = () => {\n  return (\n    <div className='Blog'>\n      <Container maxWidth='lg'>\n        <h1>Redux</h1>\n        <p>Instalamos redux</p>\n        <Box my={3}>\n          <CopyBlock\n            text={ReduxCode.code1}\n            language='jsx'\n            theme={nord}\n            codeBlock\n          />\n        </Box>\n        <p>Entonces creamos la store</p>\n        <Box my={3}>\n          <CopyBlock\n            text={ReduxCode.store}\n            language='jsx'\n            theme={nord}\n            codeBlock\n          />\n        </Box>\n        <p>\n          Y configuramos el reducer en un nuevo archivo dentro de la carpeta\n          store\n        </p>\n        <Box my={3}>\n          <CopyBlock\n            text={ReduxCode.reducer}\n            language='jsx'\n            theme={nord}\n            codeBlock\n          />\n        </Box>\n        <p>\n          Ahora instalamos el paquete que nos permitirá usar redux con react\n        </p>\n        <Box my={3}>\n          <CopyBlock\n            text={ReduxCode.reactredux}\n            language='jsx'\n            theme={nord}\n            codeBlock\n          />\n        </Box>\n        <h3>Provider</h3>\n        <p>\n          Importamos provider que nos permitirá pasar la store a todos los\n          componentes\n        </p>\n        <Box my={3}>\n          <CopyBlock\n            text={ReduxCode.provider}\n            language='jsx'\n            theme={nord}\n            codeBlock\n          />\n        </Box>\n        <h3>connect de react-redux</h3>\n        <p>\n          Configuramos el estado y las acciones a través de props en los\n          componentes\n        </p>\n        <Box my={3}>\n          <CopyBlock\n            text={ReduxCode.component}\n            language='jsx'\n            theme={nord}\n            codeBlock\n          />\n        </Box>\n        <h3>actions.js</h3>\n        <p>\n          Para llevar un control de las acciones y recibir un error si hemos\n          tipografiado algo mal, creamos un archivo actions.js\n        </p>\n        <Box my={3}>\n          <CopyBlock\n            text={ReduxCode.actions}\n            language='jsx'\n            theme={nord}\n            codeBlock\n          />\n        </Box>\n        <p>\n          Lo importamos para usarlo en los componentes donde necesitamos las\n          acciones de redux{' '}\n        </p>\n        <Box my={3}>\n          <CopyBlock\n            text={ReduxCode.actionsimport}\n            language='jsx'\n            theme={nord}\n            codeBlock\n          />\n        </Box>\n      </Container>\n    </div>\n  );\n};\n\nexport default Blog;\n","import React from 'react';\nimport { Route, NavLink, withRouter } from 'react-router-dom';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport CodeIcon from '@material-ui/icons/Code';\nimport Blog from '../Blog/Blog';\nimport Axios from '../Blog/Content/Axios/Axios';\nimport Router from '../Blog/Content/Router/Router';\nimport Redux from '../Blog/Content/Redux/Redux';\nimport './SideBar.css';\nimport Fab from '@material-ui/core/Fab';\n\nimport { connect } from 'react-redux';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  hide: {\n    display: 'none',\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n}));\n\nconst SideBar = (props) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const theme = useTheme();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position='fixed'\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}>\n        <Toolbar>\n          <IconButton\n            color='inherit'\n            aria-label='open drawer'\n            onClick={handleDrawerOpen}\n            edge='start'\n            className={clsx(classes.menuButton, open && classes.hide)}>\n            <MenuIcon />\n          </IconButton>\n          <Typography variant='h6' noWrap>\n            <Fab color='default' size='small' aria-label=''>\n              <CodeIcon />\n            </Fab>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant='persistent'\n        anchor='left'\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}>\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {['Axios', 'Router', 'Redux', 'Drafts'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemText>\n                <NavLink className='NavLink' to={'/' + text}>\n                  {text}\n                </NavLink>\n              </ListItemText>\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}>\n        <div className={classes.drawerHeader} />\n        <Route path='/' exact component={Blog} />\n        <Route path='/axios' component={Axios} />\n        <Route path='/router' component={Router} />\n        <Route path='/redux' component={Redux} />\n      </main>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    ctr: state.counter,\n  };\n};\nexport default connect(mapStateToProps)(withRouter(SideBar));\n","import React from 'react';\nimport SideBar from './components/SideBar/SideBar';\nimport { HashRouter } from 'react-router-dom';\nimport Form from './components/Form/Form';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <HashRouter>\n        <SideBar />\n        {/* <Form /> */}\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\n  counter: 0,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'INCREMENT':\n      return {\n        counter: state.counter + 1,\n      };\n    case 'DECREMENT':\n      return {\n        counter: state.counter - 1,\n      };\n    case 'ADD':\n      return {\n        counter: state.counter + 5,\n      };\n    case 'SUB':\n      return {\n        counter: state.counter - 5,\n      };\n    default:\n      break;\n  }\n\n  return state;\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// Redux\n\nimport { createStore } from 'redux';\nimport reducer from './store/reducer';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}